name: Rust CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain:  'stable' 
        components: clippy, rustfmt
    - name: Check code format
      run: cargo fmt -- --check
    - name: Run clippy
      run: cargo clippy -- -D warnings
  build:
    runs-on: ubuntu-latest
    needs: check
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, x86_64-pc-windows-msvc, x86_64-apple-darwin]
    steps:
    - uses: actions/checkout@v3
    - name: Install Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain:  'stable' 
        target: ${{ matrix.target }}
    - name: Build release
      run: cargo build --release --target ${{ matrix.target }}
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: rust-${{ matrix.target }}
        path: target/${{ matrix.target }}/release/
  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable
    - name: Install cargo-audit
      run: cargo install cargo-audit
    - name: Audit dependencies
      run: cargo audit
  docs:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v3
    - name: Install Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable
    - name: Build documentation
      run: cargo doc --no-deps
    - name: Upload documentation
      uses: actions/upload-artifact@v3
      with:
        name: rust-docs
        path: target/doc/
