name: Go CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env: 
  GO_VERSION:  '1.23.6'
  MAIN_PACKAGE_PATH: 'cmd/main.go'
   jobs:
    build:
      runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        
    - name: Download dependencies
      run: go mod download
    - name: Build using recursive approach
      run: |
        mkdir -p bin
        # Пытаемся найти и собрать main пакеты
        if [ -f "go.mod" ]; then
          # Используем go list чтобы найти все main пакеты
          main_packages=$(go list -f '{{.ImportPath}} {{.Name}}' ./... | grep ' main$' | cut -d' ' -f1)
          if [ -n "$main_packages" ]; then
            for pkg in $main_packages; do
              binary_name=$(basename "$pkg")
              echo "Building $binary_name from $pkg"
              go build -o "bin/${binary_name}" "$pkg"
            done
          else
            # Fallback: пытаемся собрать стандартным способом
            go build -o bin/app ./...
          fi
        else
          # Для проектов без go.mod
          go build -o bin/app .
        fi
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: go-binaries
        path: bin/
