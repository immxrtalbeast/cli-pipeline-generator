stages:
  - build
  - test
  - deploy

variables:
  GO_VERSION: '1.23.6'

build:
  stage: build
  image: golang:1.23.6-alpine
  script:
    - go mod download
    - go build -v ./...
  artifacts:
    paths:
      - "*.exe"
      - "*.bin"
    expire_in: 1 hour


deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
  script:
    - ssh -o StrictHostKeyChecking=no $DEPLOY_USER@$DEPLOY_SERVER "docker pull $CI_REGISTRY_IMAGE:latest"
    - ssh -o StrictHostKeyChecking=no $DEPLOY_USER@$DEPLOY_SERVER "docker stop ${CI_PROJECT_NAME} || true"
    - ssh -o StrictHostKeyChecking=no $DEPLOY_USER@$DEPLOY_SERVER "docker rm ${CI_PROJECT_NAME} || true"
    - ssh -o StrictHostKeyChecking=no $DEPLOY_USER@$DEPLOY_SERVER "docker run -d --name ${CI_PROJECT_NAME} -p 8080:8080 $CI_REGISTRY_IMAGE:latest"
  environment:
    name: production
    url: https://$DEPLOY_SERVER
  only:
    - main
    - master
  when: manual

  stage: deploy
  image: alpine:latest
  script:
    - echo "Deploying application"
  only:
    - main
    - master
